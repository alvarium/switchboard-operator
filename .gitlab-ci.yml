stages:
- test
- build

.test: &test
  image: node:${NODE_VERSION}
  stage: test
  coverage: '/All files([^|]*\|){4}[^\d]+([\d|\.]+)/'
  before_script:
  - yarn
  script:
  - yarn test --coverage --verbose
  - yarn test-operators

.credentials: &credentials |
  mkdir -p ~/.docker
  cat > ~/.docker/config.json <<EOF
    {
      "HttpHeaders": {
        "Authorization": "Bearer ${DOCKER_REGISTRY_TOKEN}"
      }
    }
  EOF

.build: &build
  stage: build
  image: docker:git
  services:
  - docker:dind
  script:
  - *credentials
  - docker login
    -u gitlab-ci-token
    -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  - docker build
    -f ${DOCKER_FILE}
    -t ${CI_REGISTRY_IMAGE}:${DOCKER_TAG}
    -t switchboardoperator/switchboard-operator:${DOCKER_TAG} .
  - docker push ${CI_REGISTRY_IMAGE}:${DOCKER_TAG}
  - docker push switchboardoperator/switchboard-operator:${DOCKER_TAG}

node-7:
  <<: *test
  variables:
    NODE_VERSION: '7'

node-8:
  <<: *test
  variables:
    NODE_VERSION: '8'

node-9:
  <<: *test
  variables:
    NODE_VERSION: '9'

node-10:
  <<: *test
  variables:
    NODE_VERSION: '10'

node-11:
  <<: *test
  variables:
    NODE_VERSION: '11'


docker-image:
  <<: *build
  only:
  - master
  variables:
    DOCKER_FILE: Dockerfile
    DOCKER_TAG: latest

docker-image-tags:
  <<: *build
  only:
  - tags
  variables:
    DOCKER_FILE: Dockerfile
    DOCKER_TAG: ${CI_COMMIT_TAG}

test-docker-image:
  <<: *build
  only:
  - master
  variables:
    DOCKER_FILE: test-operators.dockerfile
    DOCKER_TAG: latest-testing

test-docker-image-tags:
  <<: *build
  only:
  - tags
  variables:
    DOCKER_FILE: test-operators.dockerfile
    DOCKER_TAG: ${CI_COMMIT_TAG}-testing
