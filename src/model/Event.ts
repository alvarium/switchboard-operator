import Action from './Action'

export default class Event {
  name: string
  eventName: string
  route: string
  prefix: string = 'sbo-ms'
  exclusive: boolean
  subscribe: boolean = true
  prefetch: number = 1
  actions: Array<Action>

  constructor({name, eventName, route, actions}: {name: string, eventName: string, route: string, actions: Array<Action>}) {
    this.eventName = eventName
    this.route = route
  }

  // Returns the exchange object attached to this event
  toExchange() {
    return {
      name: this.eventName,
      type: 'direct'
    }
  }

  // Returns the queue object generated by this event
  toQueue() {
    return {
      name: this.getQueueName(),
      exclusive: this.exclusive,
      subscribe: this.subscribe,
      limit: this.prefetch,
      deadLetter: this.getDeadLetterEx(),
      deadLetterRoutingKey: this.route
    }
  }

  getQueueName() {
    return this.prefix + '.' + this.name + '.' + this.eventName + '.' + this.route
  }

  getDeadLetterEx() {
    return this.prefix + '.' + this.eventName + '.dead-letter'
  }

  // Returns the binding object generated by the event
  toBinding() {
    return {
      exchange: this.eventName,
      target: this.getQueueName(),
      keys: this.route
    }
  }
  // Returns the dead-letter binding object generated by the event
  toDLBinding() {
    return {
      exchange: this.getDeadLetterEx(),
      target: this.getDLQueueName(),
      keys: this.route
    }
  }
  getDLQueueName() {
    return this.getDeadLetterEx() + '.' + this.route
  }
  // Returns the dead-letter exchange object attached to this event
  toDeadLetterExchange() {
    return {
      name: this.getDeadLetterEx(),
      type: 'direct'
    }
  }
  // Returns the dead-letter queue object generated by this event
  toDeadLetterQueue() {
    return {
      name: this.getDLQueueName(),
      exclusive: this.exclusive,
      subscribe: false,
      limit: this.prefetch,
    }
  }
}
