// EventSchema
// It handle the events to listen to and saves the actions to be executed

const SchemaObject = require('schema-object')
const ActionSchema = require('./action-schema')

module.exports = new SchemaObject({
  name: {
    type: String,
    required: true
  },
  eventName: {
    type: String,
    required: true
  },
  route: {
    type: String,
    required: true
  },
  prefix: {
    type: String,
    default: 'sbo-ms'
  },
  prefetch: {
    type: Number,
    default: 1
  },
  exclusive: {
    type: Boolean,
    default: false
  },
  subscribe: {
    type: Boolean,
    default: true
  },
  actions: {
    type: Array,
    required: true,
    arrayType: {
      type: ActionSchema
    }
  }
}, {
  methods: {
    // Returns the exchange object attached to this event
    toExchange: function () {
      return {
        name: this.eventName,
        type: 'direct'
      }
    },
    // Returns the dead-letter exchange object attached to this event
    toDeadLetterExchange: function () {
      return {
        name: this.getDeadLetterEx(),
        type: 'direct'
      }
    },
    // Returns the queue object generated by this event
    toQueue: function () {
      return {
        name: this.getQueueName(),
        exclusive: this.exclusive,
        subscribe: this.subscribe,
        limit: this.prefetch,
        deadLetter: this.getDeadLetterEx(),
        deadLetterRoutingKey: this.route
      }
    },
    // Returns the dead-letter queue object generated by this event
    toDeadLetterQueue: function () {
      return {
        name: this.getDLQueueName(),
        exclusive: this.exclusive,
        subscribe: false,
        limit: this.prefetch,
      }
    },
    // Returns the binding object generated by the event
    toBinding: function () {
      return {
        exchange: this.eventName,
        target: this.getQueueName(),
        keys: this.route
      }
    },
    // Returns the dead-letter binding object generated by the event
    toDLBinding: function () {
      return {
        exchange: this.getDeadLetterEx(),
        target: this.getDLQueueName(),
        keys: this.route
      }
    },
    getDLQueueName: function () {
      return this.getDeadLetterEx() + '.' + this.route
    },
    getQueueName: function () {
      return this.prefix + '.' + this.name + '.' + this.eventName + '.' + this.route
    },
    getDeadLetterEx: function () {
      return this.prefix + '.' + this.eventName + '.dead-letter'
    }
  }
})
